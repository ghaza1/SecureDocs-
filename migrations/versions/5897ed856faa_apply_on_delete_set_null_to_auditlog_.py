"""Apply ON DELETE SET NULL to AuditLog foreign keys

Revision ID: 5897ed856faa
Revises: 36372e6bb0a2
Create Date: 2025-05-11 22:53:06.436961

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5897ed856faa'
down_revision = '36372e6bb0a2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_constraint('audit_logs_ibfk_3', type_='foreignkey')
        batch_op.drop_constraint('audit_logs_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('audit_logs_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'users', ['target_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(None, 'documents', ['target_document_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.alter_column('encryption_salt',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=16),
               existing_nullable=True)
        batch_op.alter_column('encryption_nonce',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=12),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.alter_column('encryption_nonce',
               existing_type=sa.LargeBinary(length=12),
               type_=mysql.TINYBLOB(),
               existing_nullable=True)
        batch_op.alter_column('encryption_salt',
               existing_type=sa.LargeBinary(length=16),
               type_=mysql.TINYBLOB(),
               existing_nullable=True)

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('audit_logs_ibfk_1', 'documents', ['target_document_id'], ['id'])
        batch_op.create_foreign_key('audit_logs_ibfk_2', 'users', ['target_user_id'], ['id'])
        batch_op.create_foreign_key('audit_logs_ibfk_3', 'users', ['user_id'], ['id'])

    # ### end Alembic commands ###
